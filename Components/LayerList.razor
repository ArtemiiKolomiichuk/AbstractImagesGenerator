<div class="layers-list" style="display:flex; flex-direction: column;">
    <div style="display: flex; flex-direction: row-reverse;">
        <DropdownMenu Text="Add Layer" Options="@([("Noise", ["Perlin Noise", "Random Noise", "Simple Noise"]), ("Shapes", ["Triangles", "Squares"])])" OnSelect="((key, option) => {
                Layers.Add(new() {title = option, type = key});
                StateHasChanged();
            })"/>
    </div>
    <SortableList Class="inner-list" Group="Layers" Handle=".drag-handle" Items="Layers" OnUpdate="@SortList" Context="item">
        <SortableItemTemplate>
            <LayerCard Layer="item" List="Layers" Update="StateHasChanged" />
        </SortableItemTemplate>
    </SortableList>
</div>

@code {
    [Parameter]
    public List<Layer> Layers { get; set; }

    private void SortList((int oldIndex, int newIndex) indices)
    {
        var (oldIndex, newIndex) = indices;

        var itemToMove = Layers[oldIndex];
        Layers.RemoveAt(oldIndex);

        if (newIndex < Layers.Count)
        {
            Layers.Insert(newIndex, itemToMove);
        }
        else
        {
            Layers.Add(itemToMove);
        }

        StateHasChanged();
    }
}
